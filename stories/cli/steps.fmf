/discover:
    story: 'Select or adjust the discover step'
    description:
        Defines which tests should be executed.
    example:
        - tmt run discover
        - tmt run discover --how=fmf
        - tmt run discover --how=fmf --repo=url
        - tmt run discover --how=list
        - tmt run discover --how=shell
        - tmt run discover --how=nitrate

/provision:
    story: 'Select or adjust the provision step'
    description:
        Describes what environment is needed for testing and
        how it should provisioned.
    example:
        - tmt run provision
        - tmt run provision --how=virtual
        - tmt run provision --how=testing-farm
        - tmt run provision --how=testing-farm --memory-min=8GB
        - tmt run provision --how=openstack
        - tmt run provision --how=container
        - tmt run provision --how=podman
        - tmt run provision --how=docker
        - tmt run provision --how=podman --image=fedora:rawhide
        - tmt run provision --how=beaker --distro=rhel-8
        - tmt run provision --how=beaker --arch=s390x
        - tmt run provision --how=local
        - tmt run provision --how=qemu
        - tmt run provision --how=vagrant

    /default:
        story: 'Use default config or provision a virtual machine'
        example: tmt run provision
        implemented: /tmt/steps/provision
        documented: /docs/examples#provision-options

    /local:
        story: 'Use localhost for testing'
        example: tmt run provision --how=local
        implemented: /tmt/steps/provision/localhost.py
        documented: /docs/examples#provision-options

    /virtual:
        story: 'Provision a virtual machine'
        example: tmt run provision --how=virtual --image=fedora/31-cloud-base
        implemented:
            - /tmt/steps/provision/vagrant.py
            - /tmt/steps/provision/testcloud.py
        documented: /docs/examples#provision-options

    /container:
        story: 'Provision a container'
        example: tmt run provision --how=container --image=fedora:latest
        implemented: /tmt/steps/provision/podman.py
        documented: /docs/examples#provision-options

    /connect:
        story: 'Connect to a provisioned box'
        description:
            Do not provision a new system. Instead, use provided
            authentication data to connect to a running machine.
        implemented: /tmt/steps/provision/vagrant.py
        example:
            - tmt run provision --how=connect --guest=name-or-ip --user=login --password=secret
            - tmt run provision --how=connect --guest=name-or-ip --key=private-key-path
        documented: /docs/examples#provision-options

/prepare:
    story: 'Select or adjust the prepare step'
    description:
        Additional configuration of the provisioned
        environment needed for testing.
    example:
        - tmt run prepare
        - tmt run prepare --how=ansible
        - tmt run prepare --how=ansible --playbook=server.yaml

/execute:
    story: 'Select or adjust the execute step'
    description:
        Specification of the executor which should run tests.
    example:
        - tmt run execute
        - tmt run execute --how=tmt
        - tmt run execute --how=detach
        - tmt run execute --how=restraint

    /progress:
        summary: Watch test execution progress
        story:
            As a user I want to watch live test execution
            including the complete test output.
        description:
            In order to see progress of the testing use the
            ``--verbose`` or ``-v`` switch. Applying the option
            multiple times increases verbosity. This is supported
            by the :ref:`/spec/steps/execute/tmt` executor only.
        example:
          - tmt run -v
          - tmt run -vv
          - tmt run -vvv
          - tmt run --all execute -vvv
        implemented:
          - /tmt/steps/execute/internal.py

    /interactive:
        summary: Interactive test debugging
        story:
            As a user I want to interactively debug tests in the
            middle of their execution.
        description:
            To debug a test use the ``--interactive`` option which
            disables output capturing and allows to interact
            directly with the test from the terminal. For example,
            for tests written in shell you can insert a ``bash``
            command in the middle of the script and investigate.
            Supported by the :ref:`/spec/steps/execute/tmt`
            executor only.
        example:
          - tmt run --all execute --how tmt --interactive
        implemented:
          - /tmt/steps/execute/internal.py
        documented:
          - /docs/examples.rst

/report:
    story: 'Select or adjust the report step'
    description:
        Adjusting notifications about the test progress and
        results.
    example:
        - tmt run report
        - tmt run report --email=email@example.com
        - tmt run report --irc=room

/finish:
    story: 'Select or adjust the finish step'
    description:
        Additional actions to be performed after the test
        execution has been completed. Counterpart of the
        prepare step useful for various cleanup actions.
    example:
        - tmt run finish
